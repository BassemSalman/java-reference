In General
ArrayDeque >>>


LinkedList = doubly linked list
ArrayDeque = resizable array 

Both:
O(1) for adding and removing from both ends

ArrayDeque uses less memory, and can access any position
LinkedList removing or adding in middle is much less complex since no shifting is required

ArrayDeque when you need a double-ended queue and efficient insertion/removal at both ends. 

LinkedList when you require frequent insertion and removal at arbitrary positions within the list. 

Consider the specific requirements of your application to determine which implementation is more suitable.


I like LinkedLists more, due to its dynamic structure, no shifts, no resizing

Yet it uses more memory
